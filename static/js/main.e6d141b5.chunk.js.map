{"version":3,"sources":["components/recipes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Recipe","recipe","label","image","url","ingredients","className","src","alt","href","target","rel","App","finalSuggestionsData","useState","query","setQuery","recipes","setRecipes","searchQuery","setSearchQuery","suggestion","URL","getData","a","Axios","get","result","console","log","data","hits","style","display","filter","item","indexOf","toLowerCase","type","placeholder","autoComplete","onChange","event","value","onKeyUp","onClick","preventDefault","includes","length","unshift","splice","pop","listStyleType","map","uid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAeeA,G,MAbF,SAAC,GAAY,IAAD,IAAVC,OACgCA,OAApCC,EADc,EACdA,MAAMC,EADQ,EACRA,MAAMC,EADE,EACFA,IADE,EACEC,YAEvB,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKJ,IACL,qBAAKK,IAAKJ,EAAOK,IAAKN,IACtB,mBAAGO,KAAML,EAAKM,OAAO,SAASC,IAAI,qBAAlC,0BACA,sD,QCmFGC,MAvFf,WAAe,IAUTC,EAVS,EAEUC,mBAAS,IAFnB,mBAENC,EAFM,KAEAC,EAFA,OAIcF,mBAAS,IAJvB,mBAING,EAJM,KAIEC,EAJF,OAQsBJ,mBAAS,IAR/B,mBAQNK,EARM,KAQMC,EARN,OAYoBN,mBAAS,IAZ7B,mBAYNO,EAZM,KAmBPC,GAnBO,KAmBH,mCAAD,OAAoCP,EAApC,mBAFI,WAEJ,oBAJK,qCAMRQ,EAAO,uCAAC,4BAAAC,EAAA,sEACMC,IAAMC,IAAIJ,GADhB,OACRK,EADQ,OAEZC,QAAQC,IAAIF,GACZT,EAAWS,EAAOG,KAAKC,MACvBf,EAAS,IAJG,2CAAD,qDA+Bb,OACE,sBAAKV,UAAU,MAAf,UACC,sBAAM0B,MAAO,CAACC,QAAQ,QAAtB,SAEGpB,EAAqBQ,EAAWa,QAAO,SAAAC,GAAI,OACE,IAA3CA,EAAKC,QAAQjB,EAAYkB,oBAI7B,+CACA,uBAAM/B,UAAU,cAAhB,UAEE,uBAAOA,UAAU,UAAUgC,KAAK,OAAOC,YAAY,oBAAoBC,aAAa,KAAKC,SApChF,SAAAC,GACb1B,EAAS0B,EAAMhC,OAAOiC,QAmC2FA,MAAO5B,EAAO6B,QAAS,SAACF,GAhBvItB,EAgB+JsB,EAhB9IhC,OAAOiC,OACxBf,QAAQC,IAAIV,MAiBV,uBAAOmB,KAAK,SAAUhC,UAAU,eAAeqC,MAAM,SAASE,QAlCrD,SAAAH,GACbA,EAAMI,iBACNvB,KACIF,EAAW0B,SAAShC,EAAMsB,gBAAkBhB,EAAW2B,OAAO,EAC9D3B,EAAW4B,QAAQlC,EAAMsB,eACnBhB,EAAW0B,SAAShC,EAAMsB,gBAChChB,EAAW6B,OAAO7B,EAAWe,QAAQrB,EAAMsB,eAAe,GAC1DhB,EAAW4B,QAAQlC,EAAMsB,eACzBT,QAAQC,IAAIR,IACLA,EAAW2B,QAAQ,IAC5B3B,EAAW8B,MACX9B,EAAW4B,QAAQlC,EAAMsB,sBAU3B,IAeE,oBAAIL,MAAO,CAACoB,cAAc,QAA1B,SAGMvC,EAAqBwC,KAAI,SAAAvB,GAAI,OAC3B,mCAAMA,EAAN,YAKR,qBAAKxB,UAAU,oBAAf,SACGW,GAAS,IAAMA,EAAQoC,KAAI,SAAApD,GAAM,OAChC,cAAC,EAAD,CAAqBA,OAAQA,GAAfqD,wBCzETC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6d141b5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Recipe=({recipe})=>{\r\n    const {label,image,url,ingredients}=recipe.recipe\r\n    \r\n    return(\r\n        <div className=\"card\">\r\n            <h2>{label}</h2>\r\n            <img src={image} alt={label}/>\r\n            <a href={url} target=\"_blank\" rel=\"noopener noreferer\">Full Details</a>\r\n            <button>Ingredients</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React, {useState} from 'react'\nimport Axios from 'axios'\nimport './App.css';\nimport Recipes from './components/recipes';\nimport {v4 as uid} from 'uuid'\n\nfunction App() {\n  // create state\n  const [query,setQuery]=useState(\"\")\n  // new recipes\n  const [recipes,setRecipes]=useState([])\n\n  //Suggestions\n\n  const [searchQuery,setSearchQuery]=useState(\"\");\n\n  var finalSuggestionsData;\n\n  const [suggestion,setSuggestion]=useState([])\n\n  // getting API_KEY\n  const API_KEY=\"678af463eb8d4be0a119674fba1d8c3a\"\n  // getting API_ID\n  const API_ID=\"cf3a2503\"\n\n  const URL=`https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`\n\n  const getData=async ()=>{\n    let result= await Axios.get(URL)\n    console.log(result);\n    setRecipes(result.data.hits)\n    setQuery(\"\")\n  }\n\n  const onChange=event=>{\n    setQuery(event.target.value)\n  }\n\n  const onSubmit=event=>{\n    event.preventDefault();\n    getData();\n    if(!suggestion.includes(query.toLowerCase()) && suggestion.length<5){\n        suggestion.unshift(query.toLowerCase())\n    } else if(suggestion.includes(query.toLowerCase())){\n        suggestion.splice(suggestion.indexOf(query.toLowerCase()),1)\n        suggestion.unshift(query.toLowerCase())\n        console.log(suggestion)\n    } else if (suggestion.length>=5){\n      suggestion.pop()\n      suggestion.unshift(query.toLowerCase())\n    }\n    }\n\n    let getSuggestions=(e)=>{\n      setSearchQuery(e.target.value)\n      console.log(searchQuery)\n    }\n\n  return (\n    <div className=\"App\">\n     <span style={{display:\"none\"}}>\n     {\n        finalSuggestionsData=suggestion.filter(item=>(\n          item.indexOf(searchQuery.toLowerCase())!==-1\n        ))\n      }   \n     </span> \n      <h1>Recipe Search</h1>\n      <form className=\"search-from\">\n\n        <input className=\"textBox\" type=\"text\" placeholder=\"Search for recipe\" autoComplete=\"on\" onChange={onChange} value={query} onKeyUp={(event)=>{getSuggestions(event)}}/>\n\n        <input type=\"submit\"  className=\"searchButton\" value=\"search\" onClick={onSubmit}/>\n      </form>.\n      <ul style={{listStyleType:\"none\"}}> \n          {\n            \n            finalSuggestionsData.map(data=>(\n              <li> {data} </li>\n            ))\n            // console.log(finalSuggestionsData)\n          }\n      </ul>\n      <div className=\"container recipes\">\n        {recipes!=[] && recipes.map(recipe=>(\n          <Recipes key={uid()} recipe={recipe}/>\n          \n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}